{"id":"dist/main.js","dependencies":[{"name":"D:\\_Main\\__SAVE\\_Programs\\Labs\\WebGL\\packman\\dist\\main.js.map","includedInParent":true,"mtime":1602158769368},{"name":"D:\\_Main\\__SAVE\\_Programs\\Labs\\WebGL\\packman\\src\\main.ts","includedInParent":true,"mtime":1602158768932},{"name":"D:\\_Main\\__SAVE\\_Programs\\Labs\\WebGL\\packman\\package.json","includedInParent":true,"mtime":1602090075262},{"name":"./Scene","loc":{"line":1,"column":18},"parent":"D:\\_Main\\__SAVE\\_Programs\\Labs\\WebGL\\packman\\dist\\main.js","resolved":"D:\\_Main\\__SAVE\\_Programs\\Labs\\WebGL\\packman\\dist\\Scene.js"},{"name":"./Mesh","loc":{"line":2,"column":17},"parent":"D:\\_Main\\__SAVE\\_Programs\\Labs\\WebGL\\packman\\dist\\main.js","resolved":"D:\\_Main\\__SAVE\\_Programs\\Labs\\WebGL\\packman\\dist\\Mesh.js"}],"generated":{"js":"\"use strict\";\n\nvar _Scene = _interopRequireDefault(require(\"./Scene\"));\n\nvar _Mesh = _interopRequireDefault(require(\"./Mesh\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar scene = new _Scene.default(\"#scene\");\nscene.initShader(\"vertex\", \"#vertex-shader-2d\");\nscene.initShader(\"fragment\", \"#fragment-shader-2d\");\nscene.initShaderProgram();\nvar box = new _Mesh.default();\nbox.load(\"Box\", scene.getGl());\nscene.addMesh(box);\nrequestAnimationFrame(scene.draw.bind(scene));"},"sourceMaps":{"js":{"mappings":[{"source":"../src/main.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":5,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":9,"column":4}},{"source":"../src/main.ts","name":null,"original":{"line":4,"column":11},"generated":{"line":9,"column":9}},{"source":"../src/main.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":9,"column":12}},{"source":"../src/main.ts","name":null,"original":{"line":4,"column":25},"generated":{"line":9,"column":16}},{"source":"../src/main.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":9,"column":30}},{"source":"../src/main.ts","name":null,"original":{"line":4,"column":31},"generated":{"line":9,"column":31}},{"source":"../src/main.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":9,"column":39}},{"source":"../src/main.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":40}},{"source":"../src/main.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":5,"column":5},"generated":{"line":10,"column":5}},{"source":"../src/main.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":10,"column":6}},{"source":"../src/main.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":16}},{"source":"../src/main.ts","name":null,"original":{"line":5,"column":17},"generated":{"line":10,"column":17}},{"source":"../src/main.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":25}},{"source":"../src/main.ts","name":null,"original":{"line":5,"column":27},"generated":{"line":10,"column":27}},{"source":"../src/main.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":46}},{"source":"../src/main.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":6,"column":5},"generated":{"line":11,"column":5}},{"source":"../src/main.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":11,"column":6}},{"source":"../src/main.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":16}},{"source":"../src/main.ts","name":null,"original":{"line":6,"column":17},"generated":{"line":11,"column":17}},{"source":"../src/main.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":27}},{"source":"../src/main.ts","name":null,"original":{"line":6,"column":29},"generated":{"line":11,"column":29}},{"source":"../src/main.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":50}},{"source":"../src/main.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":7,"column":5},"generated":{"line":12,"column":5}},{"source":"../src/main.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":12,"column":6}},{"source":"../src/main.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":23}},{"source":"../src/main.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":13,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":13,"column":4}},{"source":"../src/main.ts","name":null,"original":{"line":8,"column":9},"generated":{"line":13,"column":7}},{"source":"../src/main.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":13,"column":10}},{"source":"../src/main.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":13,"column":14}},{"source":"../src/main.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":13,"column":27}},{"source":"../src/main.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":13,"column":29}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":3},"generated":{"line":14,"column":3}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":14,"column":4}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":8}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":14,"column":9}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":14}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":14,"column":16}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":14,"column":21}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":22},"generated":{"line":14,"column":22}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":14,"column":27}},{"source":"../src/main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":29}},{"source":"../src/main.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":10,"column":5},"generated":{"line":15,"column":5}},{"source":"../src/main.ts","name":null,"original":{"line":10,"column":6},"generated":{"line":15,"column":6}},{"source":"../src/main.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":13}},{"source":"../src/main.ts","name":null,"original":{"line":10,"column":14},"generated":{"line":15,"column":14}},{"source":"../src/main.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":17}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":16,"column":0}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":21},"generated":{"line":16,"column":21}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":22},"generated":{"line":16,"column":22}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":27},"generated":{"line":16,"column":27}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":28},"generated":{"line":16,"column":28}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":22},"generated":{"line":16,"column":32}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":33},"generated":{"line":16,"column":33}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":22},"generated":{"line":16,"column":37}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":38},"generated":{"line":16,"column":38}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":22},"generated":{"line":16,"column":43}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":21},"generated":{"line":16,"column":44}},{"source":"../src/main.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":16,"column":45}}],"sources":{"../src/main.ts":"import Scene from \"./Scene\";\r\nimport Mesh from \"./Mesh\";\r\n\r\nconst scene: Scene = new Scene(\"#scene\");\r\nscene.initShader(\"vertex\", \"#vertex-shader-2d\");\r\nscene.initShader(\"fragment\", \"#fragment-shader-2d\");\r\nscene.initShaderProgram();\r\nconst box = new Mesh();\r\nbox.load(\"Box\", scene.getGl());\r\nscene.addMesh(box);\r\n//scene.draw();\r\n\r\nrequestAnimationFrame(scene.draw.bind(scene));\r\n\r\n/*\r\nlet canvas = null;\r\nlet gl = null;\r\n\r\nfunction init() {\r\n  canvas = document.querySelector(\"#glcanvas\");\r\n  gl = canvas.getContext(\"webgl\");\r\n  if (!gl) {\r\n    alert(\"Error init gl\");\r\n  }\r\n}\r\n\r\ninit();\r\n\r\nfunction createShader(gl, type, source) {\r\n  let shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    return shader;\r\n  }\r\n  console.log(gl.getShaderInfoLog(shader));\r\n  gl.deleteShader(shader);\r\n}\r\n\r\nlet vertexShaderSource = document.querySelector(\"#vertex-shader-2d\")\r\n  .textContent;\r\nlet fragmentShaderSource = document.querySelector(\"#fragment-shader-2d\")\r\n  .textContent;\r\nlet vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\nlet fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n\r\nfunction createProgram(gl, vertexShader, fragmentShader) {\r\n  let program = gl.createProgram();\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n  gl.linkProgram(program);\r\n  if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    return program;\r\n  }\r\n  console.log(gl.getProgramInfoLog(program));\r\n  gl.deleteProgram(program);\r\n}\r\nlet program = createProgram(gl, vertexShader, fragmentShader);\r\ngl.useProgram(program);\r\n\r\n// Create buffer\r\nconst positions = [0.5, 0.5, 0, 0, 0.5, 0];\r\nlet posBuffer = gl.createBuffer();\r\ngl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\r\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\nlet resolutionUniformLocation = gl.getUniformLocation(program, \"u_resolution\");\r\ngl.uniform2f(resolutionUniformLocation, gl.canvas.width, gl.canvas.height);\r\nlet posAttribLocation = gl.getAttribLocation(program, \"a_position\");\r\ngl.enableVertexAttribArray(posAttribLocation);\r\ngl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\r\ngl.vertexAttribPointer(posAttribLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\ngl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\ngl.clearColor(0.5, 0.5, 0.5, 0.9);\r\ngl.clear(gl.COLOR_BUFFER_BIT);\r\ngl.enable(gl.DEPTH_TEST);\r\ngl.drawArrays(gl.TRIANGLES, 0, 3);\r\n*/\r\n"},"lineCount":null}},"error":null,"hash":"12c5be0c162297dc78cec029fd9a72da","cacheData":{"env":{}}}