{"version":3,"sources":["../src/Scene.ts","../src/glm.ts","../src/Mesh.ts","../src/main.ts"],"names":[],"mappings":"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","file":"main.7cfef742.js","sourceRoot":"..","sourcesContent":["import GraphicObject from \"./GraphicObject\";\r\nimport Mesh from \"./Mesh\";\r\n\r\ntype ShaderArray = {\r\n  vertex: WebGLShader;\r\n  fragment: WebGLShader;\r\n};\r\n\r\nclass Scene {\r\n  private objects: GraphicObject[] = [];\r\n  private meshes: Mesh[] = [];\r\n\r\n  private scene: HTMLCanvasElement = <HTMLCanvasElement>(\r\n    document.createElement(\"canvas\")\r\n  );\r\n\r\n  private gl: WebGLRenderingContext = <WebGLRenderingContext>(\r\n    this.scene.getContext(\"webgl\")\r\n  );\r\n\r\n  private shaderProgram: WebGLProgram = <WebGLProgram>this.gl.createProgram();\r\n\r\n  private shaders: ShaderArray = {\r\n    vertex: <WebGLShader>this.gl.createShader(this.gl.VERTEX_SHADER),\r\n    fragment: <WebGLShader>this.gl.createShader(this.gl.FRAGMENT_SHADER),\r\n  };\r\n\r\n  /*\r\n    Constructor\r\n\r\n    @param domSelector - determines a selector of the canvas\r\n  */\r\n  constructor(domSelector: String) {\r\n    this.scene = <HTMLCanvasElement>document.querySelector(`${domSelector}`);\r\n    if (this.scene) {\r\n      this.gl =\r\n        <WebGLRenderingContext>this.scene.getContext(\"webgl\") ||\r\n        this.scene.getContext(\"experimental-webgl\");\r\n    }\r\n  }\r\n\r\n  /*\r\n    Initialize vertex or fragment shader\r\n\r\n    @param type - means the type of the creating shader (\"vertex\" or \"fragment\")\r\n    @param sourceDom - means the script tag selector which contains shader's code\r\n    @return true - if the shader was initialized successefuly\r\n            false - otherwise\r\n  */\r\n  public initShader(type: \"vertex\" | \"fragment\", sourceDom: String): Boolean {\r\n    if (type === \"vertex\") {\r\n      this.shaders[type] = <WebGLShader>(\r\n        this.gl?.createShader(this.gl.VERTEX_SHADER)\r\n      );\r\n    } else {\r\n      this.shaders[type] = <WebGLShader>(\r\n        this.gl?.createShader(this.gl.FRAGMENT_SHADER)\r\n      );\r\n    }\r\n    this.gl?.shaderSource(\r\n      this.shaders[type],\r\n      document.querySelector(`${sourceDom}`)?.textContent || \"\"\r\n    );\r\n    this.gl.compileShader(this.shaders[type]);\r\n    if (\r\n      this.gl.getShaderParameter(this.shaders[type], this.gl.COMPILE_STATUS)\r\n    ) {\r\n      return true;\r\n    }\r\n    console.log(this.gl.getShaderInfoLog(this.shaders[type]));\r\n    return false;\r\n  }\r\n\r\n  public initShaderProgram(): Boolean {\r\n    this.shaderProgram = <WebGLProgram>this.gl.createProgram();\r\n    this.gl.attachShader(this.shaderProgram, this.shaders.vertex);\r\n    this.gl.attachShader(this.shaderProgram, this.shaders.fragment);\r\n    this.gl.linkProgram(this.shaderProgram);\r\n    if (this.gl.getProgramParameter(this.shaderProgram, this.gl.LINK_STATUS)) {\r\n      return true;\r\n    }\r\n    console.log(this.gl.getProgramInfoLog(this.shaderProgram));\r\n    return false;\r\n  }\r\n\r\n  public addMesh(mesh: Mesh) {\r\n    this.meshes.push(mesh);\r\n  }\r\n\r\n  public draw() {\r\n    /*const positions: number[] = [0.5, 0.5, 0, 0, 0.5, 0];\r\n    const buffer: WebGLBuffer = <WebGLBuffer>this.gl.createBuffer();\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\r\n    this.gl.bufferData(\r\n      this.gl.ARRAY_BUFFER,\r\n      new Float32Array(positions),\r\n      this.gl.STATIC_DRAW\r\n    );\r\n\r\n    const resolUniformLocation = this.gl.getUniformLocation(\r\n      this.shaderProgram,\r\n      \"u_resolution\"\r\n    );\r\n    this.gl.uniform2f(\r\n      resolUniformLocation,\r\n      this.gl.canvas.width,\r\n      this.gl.canvas.height\r\n    );\r\n\r\n    const posAttribLocation = this.gl.getAttribLocation(\r\n      this.shaderProgram,\r\n      \"a_position\"\r\n    );\r\n    this.gl.enableVertexAttribArray(posAttribLocation);\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\r\n    this.gl.vertexAttribPointer(\r\n      posAttribLocation,\r\n      2,\r\n      this.gl.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );*/\r\n    const resolUniformLocation = this.gl.getUniformLocation(\r\n      this.shaderProgram,\r\n      \"u_resolution\"\r\n    );\r\n    this.gl.uniform2f(\r\n      resolUniformLocation,\r\n      this.gl.canvas.width,\r\n      this.gl.canvas.height\r\n    );\r\n    const posAttribLocation = this.gl.getAttribLocation(\r\n      this.shaderProgram,\r\n      \"a_position\"\r\n    );\r\n    this.gl.enableVertexAttribArray(posAttribLocation);\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.meshes[0].getArrayBuffer());\r\n    this.gl.vertexAttribPointer(\r\n      posAttribLocation,\r\n      3,\r\n      this.gl.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n\r\n    this.gl.useProgram(this.shaderProgram);\r\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\r\n    this.gl.clearColor(0.5, 0.5, 0.5, 0.9);\r\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n    this.gl.enable(this.gl.DEPTH_TEST);\r\n    this.meshes[0].draw(this.gl);\r\n    //this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\r\n\r\n    requestAnimationFrame(this.draw.bind(this));\r\n  }\r\n\r\n  public getGl(): WebGLRenderingContext {\r\n    return this.gl;\r\n  }\r\n}\r\n\r\nexport default Scene;\r\n","namespace glm {\r\n  export class vec2 {\r\n    x: number = 0;\r\n    y: number = 0;\r\n\r\n    constructor(x: number, y: number) {\r\n      this.x = x;\r\n      this.y = y;\r\n    }\r\n  }\r\n\r\n  export class vec3 extends vec2 {\r\n    z: number = 0;\r\n    r: number = 0;\r\n    g: number = 0;\r\n    b: number = 0;\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n      super(x, y);\r\n      this.z = z;\r\n      this.r = x;\r\n      this.g = y;\r\n      this.b = z;\r\n    }\r\n  }\r\n\r\n  export class vec4 extends vec3 {\r\n    w: number = 0;\r\n    a: number = 0;\r\n\r\n    constructor(x: number, y: number, z: number, w: number) {\r\n      super(x, y, z);\r\n      this.w = w;\r\n      this.r = x;\r\n      this.g = y;\r\n      this.b = z;\r\n      this.a = z;\r\n    }\r\n  }\r\n\r\n  export function translation(tx: number, ty: number): number[] {\r\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\r\n  }\r\n\r\n  export function rotation(angle: number): number[] {\r\n    const cos = Math.cos(angle);\r\n    const sin = Math.sin(angle);\r\n    return [cos, -sin, 0, sin, cos, 0, 0, 0, 1];\r\n  }\r\n\r\n  export function scaling(sx: number, sy: number): number[] {\r\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\r\n  }\r\n}\r\n\r\nexport { glm };\r\n","import { glm } from \"./glm\";\r\n\r\nclass Vertex {\r\n  public coord: glm.vec3;\r\n  public normal: glm.vec3;\r\n  public texCoord: glm.vec2;\r\n\r\n  constructor(coord: glm.vec3, normal: glm.vec3, texCoord: glm.vec2) {\r\n    this.coord = coord;\r\n    this.normal = normal;\r\n    this.texCoord = texCoord;\r\n  }\r\n}\r\n\r\nclass Mesh {\r\n  // @ts-ignore\r\n\r\n  private vertices: Vertex[] = [];\r\n\r\n  // @ts-ignore\r\n  private indices: number[] = [];\r\n\r\n  // @ts-ignore\r\n  private vertexToIndex: Map<String, number> = new Map();\r\n\r\n  // @ts-ignore\r\n  public arrayBuffer: WebGLBuffer;\r\n\r\n  // @ts-ignore\r\n  private elementArrayBuffer: WebGLBuffer;\r\n\r\n  constructor() {}\r\n\r\n  public async load(name: String, gl: WebGLRenderingContext): Promise<void> {\r\n    try {\r\n      const response = await fetch(\r\n        `http://127.0.0.1:8887/dist/assets/meshes/${name}.obj`\r\n      );\r\n      const text = await response.text();\r\n      this.parseAttributes(text);\r\n\r\n      this.arrayBuffer = <WebGLBuffer>gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.arrayBuffer);\r\n      gl.bufferData(\r\n        gl.ARRAY_BUFFER,\r\n        new Float32Array(this.getVerticesPoints()),\r\n        gl.STATIC_DRAW\r\n      );\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n      this.elementArrayBuffer = <WebGLBuffer>gl.createBuffer();\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.elementArrayBuffer);\r\n      gl.bufferData(\r\n        gl.ELEMENT_ARRAY_BUFFER,\r\n        new Uint16Array(this.indices),\r\n        gl.STATIC_DRAW\r\n      );\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  private parseAttributes(text: string) {\r\n    const keywordRE = /(\\w*)(?: )*(.*)/;\r\n    const lines = text.split(\"\\n\");\r\n    let v: glm.vec3[] = [];\r\n    let vn: glm.vec3[] = [];\r\n    let vt: glm.vec3[] = [];\r\n    for (let linesNo = 0; linesNo < lines.length; linesNo++) {\r\n      const line = lines[linesNo].trim();\r\n      if (line === \"\" || line.startsWith(\"#\")) {\r\n        continue;\r\n      }\r\n      const m = keywordRE.exec(line);\r\n      if (!m) {\r\n        continue;\r\n      }\r\n      const [, keyword, unparsedArgs] = m;\r\n      const parts = line.split(/\\s+/);\r\n      switch (keyword) {\r\n        case \"v\":\r\n          v.push(new glm.vec3(+parts[1], +parts[2], +parts[3]));\r\n          break;\r\n        case \"vn\":\r\n          vn.push(new glm.vec3(+parts[1], +parts[2], +parts[3]));\r\n          break;\r\n        case \"vt\":\r\n          vt.push(new glm.vec3(+parts[1], +parts[2], +parts[3]));\r\n          break;\r\n        case \"f\":\r\n          unparsedArgs.split(/\\s+/).forEach((param) => {\r\n            this.addNewVertex(param, v, vn, vt);\r\n          });\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private addNewVertex(\r\n    param: string,\r\n    v: glm.vec3[],\r\n    vn: glm.vec3[],\r\n    vt: glm.vec3[]\r\n  ) {\r\n    if (!this.vertexToIndex.has(param)) {\r\n      this.vertexToIndex.set(param, this.vertexToIndex.size + 1);\r\n      const indices: number[] = param.split(\"/\").map((item) => {\r\n        return +item;\r\n      });\r\n      this.vertices.push(\r\n        new Vertex(v[indices[0] - 1], vn[indices[1] - 1], vt[indices[2] - 1])\r\n      );\r\n    } else {\r\n      this.indices.push(<number>this.vertexToIndex.get(param));\r\n    }\r\n  }\r\n\r\n  public draw(gl: WebGLRenderingContext) {\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.elementArrayBuffer);\r\n    gl.drawElements(gl.LINE_LOOP, this.indices.length, gl.UNSIGNED_SHORT, 0);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n  }\r\n\r\n  private getVerticesPoints(): number[] {\r\n    const verticesPoints: number[] = this.vertices\r\n      .map((vertex) => {\r\n        return [vertex.coord.x, vertex.coord.y, vertex.coord.z];\r\n      })\r\n      .flat();\r\n    return verticesPoints;\r\n  }\r\n\r\n  public getArrayBuffer(): WebGLBuffer {\r\n    return this.arrayBuffer;\r\n  }\r\n}\r\n\r\nexport default Mesh;\r\n","import Scene from \"./Scene\";\r\nimport Mesh from \"./Mesh\";\r\n\r\nconst scene: Scene = new Scene(\"#scene\");\r\nscene.initShader(\"vertex\", \"#vertex-shader-2d\");\r\nscene.initShader(\"fragment\", \"#fragment-shader-2d\");\r\nscene.initShaderProgram();\r\nconst box = new Mesh();\r\nbox.load(\"Box\", scene.getGl());\r\nscene.addMesh(box);\r\n//scene.draw();\r\n\r\nrequestAnimationFrame(scene.draw.bind(scene));\r\n\r\n/*\r\nlet canvas = null;\r\nlet gl = null;\r\n\r\nfunction init() {\r\n  canvas = document.querySelector(\"#glcanvas\");\r\n  gl = canvas.getContext(\"webgl\");\r\n  if (!gl) {\r\n    alert(\"Error init gl\");\r\n  }\r\n}\r\n\r\ninit();\r\n\r\nfunction createShader(gl, type, source) {\r\n  let shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    return shader;\r\n  }\r\n  console.log(gl.getShaderInfoLog(shader));\r\n  gl.deleteShader(shader);\r\n}\r\n\r\nlet vertexShaderSource = document.querySelector(\"#vertex-shader-2d\")\r\n  .textContent;\r\nlet fragmentShaderSource = document.querySelector(\"#fragment-shader-2d\")\r\n  .textContent;\r\nlet vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\nlet fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n\r\nfunction createProgram(gl, vertexShader, fragmentShader) {\r\n  let program = gl.createProgram();\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n  gl.linkProgram(program);\r\n  if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    return program;\r\n  }\r\n  console.log(gl.getProgramInfoLog(program));\r\n  gl.deleteProgram(program);\r\n}\r\nlet program = createProgram(gl, vertexShader, fragmentShader);\r\ngl.useProgram(program);\r\n\r\n// Create buffer\r\nconst positions = [0.5, 0.5, 0, 0, 0.5, 0];\r\nlet posBuffer = gl.createBuffer();\r\ngl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\r\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\nlet resolutionUniformLocation = gl.getUniformLocation(program, \"u_resolution\");\r\ngl.uniform2f(resolutionUniformLocation, gl.canvas.width, gl.canvas.height);\r\nlet posAttribLocation = gl.getAttribLocation(program, \"a_position\");\r\ngl.enableVertexAttribArray(posAttribLocation);\r\ngl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\r\ngl.vertexAttribPointer(posAttribLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\ngl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\ngl.clearColor(0.5, 0.5, 0.5, 0.9);\r\ngl.clear(gl.COLOR_BUFFER_BIT);\r\ngl.enable(gl.DEPTH_TEST);\r\ngl.drawArrays(gl.TRIANGLES, 0, 3);\r\n*/\r\n"]}